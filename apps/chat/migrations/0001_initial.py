# Generated by Django 4.2.7 on 2025-07-31 11:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('ended', 'Ended')], default='active', max_length=10)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('session_context', models.JSONField(blank=True, default=dict)),
                ('agent_personality_state', models.JSONField(blank=True, default=dict)),
                ('message_count', models.PositiveIntegerField(default=0)),
                ('user_satisfaction', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ProactiveMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('trigger_type', models.CharField(choices=[('inactivity', 'User Inactivity'), ('mood_change', 'Mood Change Detected'), ('scheduled', 'Scheduled Check-in'), ('achievement', 'Achievement Unlock'), ('recommendation', 'Content Recommendation')], max_length=20)),
                ('message_template', models.TextField()),
                ('personalized_content', models.TextField()),
                ('scheduled_for', models.DateTimeField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('trigger_context', models.JSONField(blank=True, default=dict)),
                ('priority', models.PositiveSmallIntegerField(default=1)),
                ('user_responded', models.BooleanField(default=False)),
                ('response_time_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proactive_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-priority', 'scheduled_for'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('user', 'User Message'), ('agent', 'Agent Message'), ('system', 'System Message'), ('game', 'Game Message')], max_length=10)),
                ('content', models.TextField()),
                ('encrypted_content', models.BinaryField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('sentiment', models.CharField(blank=True, choices=[('positive', 'Positive'), ('negative', 'Negative'), ('neutral', 'Neutral'), ('mixed', 'Mixed')], max_length=10, null=True)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('emotion_analysis', models.JSONField(blank=True, default=dict)),
                ('keywords', models.JSONField(blank=True, default=list)),
                ('response_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('agent_confidence', models.FloatField(blank=True, null=True)),
                ('user_rating', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('is_helpful', models.BooleanField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.chatsession')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AgentPersonality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('communication_style', models.CharField(choices=[('casual', 'Casual & Friendly'), ('professional', 'Professional'), ('empathetic', 'Empathetic'), ('playful', 'Playful'), ('supportive', 'Supportive'), ('analytical', 'Analytical')], default='casual', max_length=20)),
                ('enthusiasm_level', models.FloatField(default=0.7)),
                ('formality_level', models.FloatField(default=0.3)),
                ('proactivity_level', models.FloatField(default=0.5)),
                ('empathy_level', models.FloatField(default=0.8)),
                ('preferred_topics', models.JSONField(blank=True, default=list)),
                ('conversation_patterns', models.JSONField(blank=True, default=dict)),
                ('response_preferences', models.JSONField(blank=True, default=dict)),
                ('adaptation_count', models.PositiveIntegerField(default=0)),
                ('last_adaptation', models.DateTimeField(auto_now=True)),
                ('user_satisfaction_avg', models.FloatField(default=0.0)),
                ('successful_interactions', models.PositiveIntegerField(default=0)),
                ('total_interactions', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent_personality', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConversationTopic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('topic_name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('personal', 'Personal Life'), ('education', 'Education'), ('career', 'Career'), ('relationships', 'Relationships'), ('hobbies', 'Hobbies & Interests'), ('mental_health', 'Mental Health'), ('goals', 'Goals & Aspirations'), ('entertainment', 'Entertainment'), ('technology', 'Technology'), ('other', 'Other')], max_length=20)),
                ('keywords', models.JSONField(default=list)),
                ('frequency', models.PositiveIntegerField(default=1)),
                ('sentiment_avg', models.FloatField(default=0.0)),
                ('last_discussed', models.DateTimeField(auto_now=True)),
                ('user_interest_level', models.FloatField(default=0.5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='chat.chatsession')),
            ],
            options={
                'ordering': ['-frequency', '-last_discussed'],
                'unique_together': {('session', 'topic_name')},
            },
        ),
    ]
