# Generated by Django 4.2.7 on 2025-07-31 11:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PersonalityAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('assessment_type', models.CharField(choices=[('onboarding', 'Initial Onboarding'), ('survey', 'Periodic Survey'), ('behavioral', 'Behavioral Analysis'), ('game_based', 'Game-based Assessment')], max_length=20)),
                ('openness', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('conscientiousness', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('extraversion', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('agreeableness', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('neuroticism', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('confidence_scores', models.JSONField(default=dict)),
                ('insights', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personality_assessments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PersonalityTrait',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('openness', 'Openness to Experience'), ('conscientiousness', 'Conscientiousness'), ('extraversion', 'Extraversion'), ('agreeableness', 'Agreeableness'), ('neuroticism', 'Neuroticism')], max_length=50, unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalityInsight',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('insight_type', models.CharField(choices=[('strength', 'Personality Strength'), ('growth_area', 'Growth Area'), ('behavior_pattern', 'Behavior Pattern'), ('recommendation', 'Recommendation'), ('mood_trigger', 'Mood Trigger')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('relevance_score', models.FloatField(default=0.5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('confidence_score', models.FloatField(default=0.5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('is_read', models.BooleanField(default=False)),
                ('is_helpful', models.BooleanField(blank=True, null=True)),
                ('user_rating', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personality_insights', to='personality.personalityassessment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personality_insights', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PersonalityEvolution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('openness_change', models.FloatField()),
                ('conscientiousness_change', models.FloatField()),
                ('extraversion_change', models.FloatField()),
                ('agreeableness_change', models.FloatField()),
                ('neuroticism_change', models.FloatField()),
                ('days_between', models.PositiveIntegerField()),
                ('trigger_event', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evolution_from', to='personality.personalityassessment')),
                ('to_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evolution_to', to='personality.personalityassessment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personality_evolution', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdaptationPolicy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('policy_weights', models.JSONField(default=dict)),
                ('communication_style', models.CharField(default='balanced', max_length=50)),
                ('proactivity_level', models.FloatField(default=0.5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('formality_level', models.FloatField(default=0.5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('empathy_level', models.FloatField(default=0.7, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('total_interactions', models.PositiveIntegerField(default=0)),
                ('successful_interactions', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('model_version', models.CharField(default='v1.0', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='adaptation_policy', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
