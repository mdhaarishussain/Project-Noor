version: '3.8'

services:
  # Redis Service - Ultra-lightweight for free tier
  redis:
    image: redis:7-alpine
    container_name: bondhu-redis
    ports:
      - "127.0.0.1:6379:6379"
    restart: unless-stopped
    volumes:
      - redis-data:/data
    command: redis-server --maxmemory 32mb --maxmemory-policy allkeys-lru --save "" --appendonly no --tcp-keepalive 60 --timeout 300
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 6h
      timeout: 60s
      retries: 1
      start_period: 60s
    networks:
      - bondhu-network
    deploy:
      resources:
        limits:
          memory: 48M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true

  # Main Application Service - Free tier optimized
  bondhu-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bondhu-api
    ports:
      - "127.0.0.1:8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      - LOG_LEVEL=warning
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - bondhu-network
    healthcheck:
      test: [ "CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=10)" ]
      interval: 12h
      timeout: 60s
      retries: 1
      start_period: 120s
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
    security_opt:
      - no-new-privileges:true

  # Celery Worker - Minimal resource usage
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bondhu-celery-worker
    command: celery -A core.celery_app worker --loglevel=warning --concurrency=1 --max-tasks-per-child=500 --time-limit=180 --soft-time-limit=150 --without-gossip --without-mingle --without-heartbeat
    environment:
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      - LOG_LEVEL=warning
      - CELERY_WORKER=true
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - bondhu-network
    deploy:
      resources:
        limits:
          memory: 80M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true

  # Frontend Service - Next.js Application
  # bondhu-frontend:
  #   build:
  #     context: ../bondhu-landing
  #     dockerfile: Dockerfile.dev
  #   container_name: bondhu-frontend
  #   ports:
  #     - "127.0.0.1:3000:3000"
  #   environment:
  #     - NODE_ENV=development
  #     - NEXT_TELEMETRY_DISABLED=1
  #     - NEXT_PUBLIC_API_URL=http://localhost:8000
  #     - NEXT_PUBLIC_FRONTEND_URL=http://localhost:3000
  #   env_file:
  #     - ../bondhu-ai/.env
  #   depends_on:
  #     - bondhu-api
  #   restart: unless-stopped
  #   networks:
  #     - bondhu-network
  #   volumes:
  #     - ../bondhu-landing:/app
  #     - /app/node_modules
  #     - /app/.next
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 256M
  #         cpus: '0.3'
  #   security_opt:
  #     - no-new-privileges:true

volumes:
  redis-data:
    driver: local

networks:
  bondhu-network:
    driver: bridge
