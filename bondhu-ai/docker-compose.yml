services:
  # Redis Service - Optimized for low-memory Azure VM
  redis:
    image: redis:7-alpine
    container_name: bondhu-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis-data:/data
    # Reduced memory limits for B2s VM (4GB total RAM)
    command: redis-server --maxmemory 64mb --maxmemory-policy allkeys-lru --save "" --appendonly no --tcp-keepalive 60 --timeout 300
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - bondhu-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true
    # Fix memory overcommit warning
    sysctls:
      - net.core.somaxconn=511

  # Main Application Service - Optimized for Azure B2s (4GB RAM)
  bondhu-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bondhu-api
    ports:
      - "8000:8000"
    environment:
      # Redis configuration - use Docker service name
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENABLE_REDIS=true

      # Application settings - reduced for low memory
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      - LOG_LEVEL=WARNING
      - ENABLE_RL=${ENABLE_RL:-false}
      - ENABLE_SCHEDULER=${ENABLE_SCHEDULER:-false}
      - WORKERS=${WORKERS:-1}
      - MAX_CONCURRENCY=${MAX_CONCURRENCY:-10}
    env_file:
      - .env
    volumes:
      - ./cache:/app/cache
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - bondhu-network
    healthcheck:
      test: [ "CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=10)" ]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1536M
          cpus: '0.75'
        reservations:
          memory: 512M
          cpus: '0.25'
    security_opt:
      - no-new-privileges:true

  # Celery Worker - Optimized for Azure B2s VM
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bondhu-celery-worker
    # Use solo pool for single worker (prevents memory issues)
    command: celery -A core.celery_app worker --loglevel=warning --pool=solo --concurrency=1 --max-tasks-per-child=50 --time-limit=300 --soft-time-limit=240
    environment:
      # Redis configuration - use Docker service name
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

      # Celery-specific settings optimized for low memory
      - FORKED_BY_MULTIPROCESSING=1
      - C_FORCE_ROOT=true
      - CELERYD_MAX_TASKS_PER_CHILD=50
      - CELERYD_TASK_TIME_LIMIT=300
      - CELERYD_TASK_SOFT_TIME_LIMIT=240

      # Application settings
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      - LOG_LEVEL=WARNING
      - CELERY_WORKER=true
    env_file:
      - .env
    volumes:
      - ./cache:/app/cache
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - bondhu-network
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.15'
    security_opt:
      - no-new-privileges:true
  # Frontend Service - Next.js Application
  # bondhu-frontend:
  #   build:
  #     context: ../bondhu-landing
  #     dockerfile: Dockerfile.dev
  #   container_name: bondhu-frontend
  #   ports:
  #     - "127.0.0.1:3000:3000"
  #   environment:
  #     - NODE_ENV=development
  #     - NEXT_TELEMETRY_DISABLED=1
  #     - NEXT_PUBLIC_API_URL=http://localhost:8000
  #     - NEXT_PUBLIC_FRONTEND_URL=http://localhost:3000
  #   env_file:
  #     - ../bondhu-ai/.env
  #   depends_on:
  #     - bondhu-api
  #   restart: unless-stopped
  #   networks:
  #     - bondhu-network
  #   volumes:
  #     - ../bondhu-landing:/app
  #     - /app/node_modules
  #     - /app/.next
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 256M
  #         cpus: '0.3'
  #   security_opt:
  #     - no-new-privileges:true

volumes:
  redis-data:
    driver: local

networks:
  bondhu-network:
    driver: bridge
